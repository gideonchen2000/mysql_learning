71, 索引

 1, 索引相当于一本书的目录, 通过目录可以快速找到对应的资源
 查询有两种方式(全表扫描, 根据索引检索)

 2, 创建索引对象 删除索引对象
    创建索引对象：
			create index 索引名称 on 表名(字段名);
		删除索引对象：
			drop index 索引名称 on 表名;

 3, 什么时候考虑给字段添加索引?
		*数据量庞大（根据客户的需求，根据线上的环境）
		*该字段很少的DML操作（因为字段进行修改操作，索引也需要维护）
		*该字段经常出现在where子句中（经常根据哪个字段查询）

 4, ***主键和具有unique约束的字段自动会添加索引
    主键查询效率较高, 尽量根据主键检索.

 7, 索引的实现原理
  通过B tree缩小扫描范围, 底层索引进行了排序, 分区, 索引会携带数据在表中的"物理地址", 最终通过索引检索到数据之后,
  获取到关联的物理地址, 通过物理地址定位表中的数据, 效率是最高的.
        select ename from emp where ename = 'SMITH';
  			通过索引转换为：
  			select ename from emp where 物理地址 = 0x3;
 8, 索引的分类
    单一索引：给单个字段添加索引
		复合索引: 给多个字段联合起来添加1个索引
		主键索引：主键上会自动添加索引
		唯一索引：有unique约束的字段上会自动添加索引
 9, 索引失效
  select ename from emp where ename like '%A%';
  模糊查询的时候, 第一个通配符使用的是%, 这个时候索引是失效的.

72, 视图
 1, 什么是视图
  站在不同的角度去看到数据. 同一张表的数据, 通过不同的角度去看待
 2, 怎么 创建/删除 视图
   create view myview as select empno,ename from emp;
   drop view myview;
   ***只有DQL语句才能以视图对象的方式创建出来
 3, 对视图进行增删改查, 会影响到原表数据 (通过视图影响原表数据的, 不是直接操作的原表)
   可以对视图进行CRUD操作
 4, 视图的作用
   视图可以隐藏表的实现细节, 保密级别高的项目, 数据库之对外提供相关的视图, java只对试图对象进行CRUD.
   
